/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/gateway-connector-bridge/types/types.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fgateway_2dconnector_2dbridge_2ftypes_2ftypes_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fgateway_2dconnector_2dbridge_2ftypes_2ftypes_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "github.com/gogo/protobuf/gogoproto/gogo.pb-c.h"

typedef struct _Types__ConnectMessage Types__ConnectMessage;
typedef struct _Types__DisconnectMessage Types__DisconnectMessage;


/* --- enums --- */


/* --- messages --- */

struct  _Types__ConnectMessage
{
  ProtobufCMessage base;
  char *id;
  char *key;
};
#define TYPES__CONNECT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__connect_message__descriptor) \
    , NULL, NULL }


struct  _Types__DisconnectMessage
{
  ProtobufCMessage base;
  char *id;
  char *key;
};
#define TYPES__DISCONNECT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&types__disconnect_message__descriptor) \
    , NULL, NULL }


/* Types__ConnectMessage methods */
void   types__connect_message__init
                     (Types__ConnectMessage         *message);
size_t types__connect_message__get_packed_size
                     (const Types__ConnectMessage   *message);
size_t types__connect_message__pack
                     (const Types__ConnectMessage   *message,
                      uint8_t             *out);
size_t types__connect_message__pack_to_buffer
                     (const Types__ConnectMessage   *message,
                      ProtobufCBuffer     *buffer);
Types__ConnectMessage *
       types__connect_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__connect_message__free_unpacked
                     (Types__ConnectMessage *message,
                      ProtobufCAllocator *allocator);
/* Types__DisconnectMessage methods */
void   types__disconnect_message__init
                     (Types__DisconnectMessage         *message);
size_t types__disconnect_message__get_packed_size
                     (const Types__DisconnectMessage   *message);
size_t types__disconnect_message__pack
                     (const Types__DisconnectMessage   *message,
                      uint8_t             *out);
size_t types__disconnect_message__pack_to_buffer
                     (const Types__DisconnectMessage   *message,
                      ProtobufCBuffer     *buffer);
Types__DisconnectMessage *
       types__disconnect_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   types__disconnect_message__free_unpacked
                     (Types__DisconnectMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Types__ConnectMessage_Closure)
                 (const Types__ConnectMessage *message,
                  void *closure_data);
typedef void (*Types__DisconnectMessage_Closure)
                 (const Types__DisconnectMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor types__connect_message__descriptor;
extern const ProtobufCMessageDescriptor types__disconnect_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fgateway_2dconnector_2dbridge_2ftypes_2ftypes_2eproto__INCLUDED */
