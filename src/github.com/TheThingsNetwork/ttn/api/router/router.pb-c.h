/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/ttn/api/router/router.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2frouter_2frouter_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2frouter_2frouter_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"
#include "github.com/gogo/protobuf/gogoproto/gogo.pb-c.h"
#include "ttn/api/api.pb-c.h"
#include "ttn/api/protocol/protocol.pb-c.h"
#include "ttn/api/gateway/gateway.pb-c.h"
#include "ttn/api/trace/trace.pb-c.h"

typedef struct _Router__SubscribeRequest Router__SubscribeRequest;
typedef struct _Router__UplinkMessage Router__UplinkMessage;
typedef struct _Router__DownlinkMessage Router__DownlinkMessage;
typedef struct _Router__DeviceActivationRequest Router__DeviceActivationRequest;
typedef struct _Router__DeviceActivationResponse Router__DeviceActivationResponse;
typedef struct _Router__GatewayStatusRequest Router__GatewayStatusRequest;
typedef struct _Router__GatewayStatusResponse Router__GatewayStatusResponse;
typedef struct _Router__StatusRequest Router__StatusRequest;
typedef struct _Router__Status Router__Status;


/* --- enums --- */


/* --- messages --- */

struct  _Router__SubscribeRequest
{
  ProtobufCMessage base;
};
#define ROUTER__SUBSCRIBE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__subscribe_request__descriptor) \
     }


struct  _Router__UplinkMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  Protocol__Message *message;
  Protocol__RxMetadata *protocol_metadata;
  Gateway__RxMetadata *gateway_metadata;
  Trace__Trace *trace;
};
#define ROUTER__UPLINK_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__uplink_message__descriptor) \
    , 0,{0,NULL}, NULL, NULL, NULL, NULL }


struct  _Router__DownlinkMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  Protocol__Message *message;
  Protocol__TxConfiguration *protocol_configuration;
  Gateway__TxConfiguration *gateway_configuration;
  Trace__Trace *trace;
};
#define ROUTER__DOWNLINK_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__downlink_message__descriptor) \
    , 0,{0,NULL}, NULL, NULL, NULL, NULL }


struct  _Router__DeviceActivationRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  Protocol__Message *message;
  protobuf_c_boolean has_dev_eui;
  ProtobufCBinaryData dev_eui;
  protobuf_c_boolean has_app_eui;
  ProtobufCBinaryData app_eui;
  Protocol__RxMetadata *protocol_metadata;
  Gateway__RxMetadata *gateway_metadata;
  Protocol__ActivationMetadata *activation_metadata;
  Trace__Trace *trace;
};
#define ROUTER__DEVICE_ACTIVATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__device_activation_request__descriptor) \
    , 0,{0,NULL}, NULL, 0,{0,NULL}, 0,{0,NULL}, NULL, NULL, NULL, NULL }


struct  _Router__DeviceActivationResponse
{
  ProtobufCMessage base;
};
#define ROUTER__DEVICE_ACTIVATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__device_activation_response__descriptor) \
     }


/*
 * message GatewayStatusRequest is used to request the status of a gateway from
 * this Router
 */
struct  _Router__GatewayStatusRequest
{
  ProtobufCMessage base;
  char *gateway_id;
};
#define ROUTER__GATEWAY_STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__gateway_status_request__descriptor) \
    , NULL }


struct  _Router__GatewayStatusResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_last_seen;
  int64_t last_seen;
  Gateway__Status *status;
};
#define ROUTER__GATEWAY_STATUS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__gateway_status_response__descriptor) \
    , 0,0, NULL }


/*
 * message StatusRequest is used to request the status of this Router
 */
struct  _Router__StatusRequest
{
  ProtobufCMessage base;
};
#define ROUTER__STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__status_request__descriptor) \
     }


/*
 * message Status is the response to the StatusRequest
 */
struct  _Router__Status
{
  ProtobufCMessage base;
  Api__SystemStats *system;
  Api__ComponentStats *component;
  Api__Rates *gateway_status;
  Api__Rates *uplink;
  Api__Rates *downlink;
  Api__Rates *activations;
  /*
   * Connections
   */
  protobuf_c_boolean has_connected_gateways;
  uint32_t connected_gateways;
  protobuf_c_boolean has_connected_brokers;
  uint32_t connected_brokers;
};
#define ROUTER__STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&router__status__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, 0,0, 0,0 }


/* Router__SubscribeRequest methods */
void   router__subscribe_request__init
                     (Router__SubscribeRequest         *message);
size_t router__subscribe_request__get_packed_size
                     (const Router__SubscribeRequest   *message);
size_t router__subscribe_request__pack
                     (const Router__SubscribeRequest   *message,
                      uint8_t             *out);
size_t router__subscribe_request__pack_to_buffer
                     (const Router__SubscribeRequest   *message,
                      ProtobufCBuffer     *buffer);
Router__SubscribeRequest *
       router__subscribe_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__subscribe_request__free_unpacked
                     (Router__SubscribeRequest *message,
                      ProtobufCAllocator *allocator);
/* Router__UplinkMessage methods */
void   router__uplink_message__init
                     (Router__UplinkMessage         *message);
size_t router__uplink_message__get_packed_size
                     (const Router__UplinkMessage   *message);
size_t router__uplink_message__pack
                     (const Router__UplinkMessage   *message,
                      uint8_t             *out);
size_t router__uplink_message__pack_to_buffer
                     (const Router__UplinkMessage   *message,
                      ProtobufCBuffer     *buffer);
Router__UplinkMessage *
       router__uplink_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__uplink_message__free_unpacked
                     (Router__UplinkMessage *message,
                      ProtobufCAllocator *allocator);
/* Router__DownlinkMessage methods */
void   router__downlink_message__init
                     (Router__DownlinkMessage         *message);
size_t router__downlink_message__get_packed_size
                     (const Router__DownlinkMessage   *message);
size_t router__downlink_message__pack
                     (const Router__DownlinkMessage   *message,
                      uint8_t             *out);
size_t router__downlink_message__pack_to_buffer
                     (const Router__DownlinkMessage   *message,
                      ProtobufCBuffer     *buffer);
Router__DownlinkMessage *
       router__downlink_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__downlink_message__free_unpacked
                     (Router__DownlinkMessage *message,
                      ProtobufCAllocator *allocator);
/* Router__DeviceActivationRequest methods */
void   router__device_activation_request__init
                     (Router__DeviceActivationRequest         *message);
size_t router__device_activation_request__get_packed_size
                     (const Router__DeviceActivationRequest   *message);
size_t router__device_activation_request__pack
                     (const Router__DeviceActivationRequest   *message,
                      uint8_t             *out);
size_t router__device_activation_request__pack_to_buffer
                     (const Router__DeviceActivationRequest   *message,
                      ProtobufCBuffer     *buffer);
Router__DeviceActivationRequest *
       router__device_activation_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__device_activation_request__free_unpacked
                     (Router__DeviceActivationRequest *message,
                      ProtobufCAllocator *allocator);
/* Router__DeviceActivationResponse methods */
void   router__device_activation_response__init
                     (Router__DeviceActivationResponse         *message);
size_t router__device_activation_response__get_packed_size
                     (const Router__DeviceActivationResponse   *message);
size_t router__device_activation_response__pack
                     (const Router__DeviceActivationResponse   *message,
                      uint8_t             *out);
size_t router__device_activation_response__pack_to_buffer
                     (const Router__DeviceActivationResponse   *message,
                      ProtobufCBuffer     *buffer);
Router__DeviceActivationResponse *
       router__device_activation_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__device_activation_response__free_unpacked
                     (Router__DeviceActivationResponse *message,
                      ProtobufCAllocator *allocator);
/* Router__GatewayStatusRequest methods */
void   router__gateway_status_request__init
                     (Router__GatewayStatusRequest         *message);
size_t router__gateway_status_request__get_packed_size
                     (const Router__GatewayStatusRequest   *message);
size_t router__gateway_status_request__pack
                     (const Router__GatewayStatusRequest   *message,
                      uint8_t             *out);
size_t router__gateway_status_request__pack_to_buffer
                     (const Router__GatewayStatusRequest   *message,
                      ProtobufCBuffer     *buffer);
Router__GatewayStatusRequest *
       router__gateway_status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__gateway_status_request__free_unpacked
                     (Router__GatewayStatusRequest *message,
                      ProtobufCAllocator *allocator);
/* Router__GatewayStatusResponse methods */
void   router__gateway_status_response__init
                     (Router__GatewayStatusResponse         *message);
size_t router__gateway_status_response__get_packed_size
                     (const Router__GatewayStatusResponse   *message);
size_t router__gateway_status_response__pack
                     (const Router__GatewayStatusResponse   *message,
                      uint8_t             *out);
size_t router__gateway_status_response__pack_to_buffer
                     (const Router__GatewayStatusResponse   *message,
                      ProtobufCBuffer     *buffer);
Router__GatewayStatusResponse *
       router__gateway_status_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__gateway_status_response__free_unpacked
                     (Router__GatewayStatusResponse *message,
                      ProtobufCAllocator *allocator);
/* Router__StatusRequest methods */
void   router__status_request__init
                     (Router__StatusRequest         *message);
size_t router__status_request__get_packed_size
                     (const Router__StatusRequest   *message);
size_t router__status_request__pack
                     (const Router__StatusRequest   *message,
                      uint8_t             *out);
size_t router__status_request__pack_to_buffer
                     (const Router__StatusRequest   *message,
                      ProtobufCBuffer     *buffer);
Router__StatusRequest *
       router__status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__status_request__free_unpacked
                     (Router__StatusRequest *message,
                      ProtobufCAllocator *allocator);
/* Router__Status methods */
void   router__status__init
                     (Router__Status         *message);
size_t router__status__get_packed_size
                     (const Router__Status   *message);
size_t router__status__pack
                     (const Router__Status   *message,
                      uint8_t             *out);
size_t router__status__pack_to_buffer
                     (const Router__Status   *message,
                      ProtobufCBuffer     *buffer);
Router__Status *
       router__status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   router__status__free_unpacked
                     (Router__Status *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Router__SubscribeRequest_Closure)
                 (const Router__SubscribeRequest *message,
                  void *closure_data);
typedef void (*Router__UplinkMessage_Closure)
                 (const Router__UplinkMessage *message,
                  void *closure_data);
typedef void (*Router__DownlinkMessage_Closure)
                 (const Router__DownlinkMessage *message,
                  void *closure_data);
typedef void (*Router__DeviceActivationRequest_Closure)
                 (const Router__DeviceActivationRequest *message,
                  void *closure_data);
typedef void (*Router__DeviceActivationResponse_Closure)
                 (const Router__DeviceActivationResponse *message,
                  void *closure_data);
typedef void (*Router__GatewayStatusRequest_Closure)
                 (const Router__GatewayStatusRequest *message,
                  void *closure_data);
typedef void (*Router__GatewayStatusResponse_Closure)
                 (const Router__GatewayStatusResponse *message,
                  void *closure_data);
typedef void (*Router__StatusRequest_Closure)
                 (const Router__StatusRequest *message,
                  void *closure_data);
typedef void (*Router__Status_Closure)
                 (const Router__Status *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Router__Router_Service Router__Router_Service;
struct _Router__Router_Service
{
  ProtobufCService base;
  void (*gateway_status)(Router__Router_Service *service,
                         const Gateway__Status *input,
                         Google__Protobuf__Empty_Closure closure,
                         void *closure_data);
  void (*uplink)(Router__Router_Service *service,
                 const Router__UplinkMessage *input,
                 Google__Protobuf__Empty_Closure closure,
                 void *closure_data);
  void (*subscribe)(Router__Router_Service *service,
                    const Router__SubscribeRequest *input,
                    Router__DownlinkMessage_Closure closure,
                    void *closure_data);
  void (*activate)(Router__Router_Service *service,
                   const Router__DeviceActivationRequest *input,
                   Router__DeviceActivationResponse_Closure closure,
                   void *closure_data);
};
typedef void (*Router__Router_ServiceDestroy)(Router__Router_Service *);
void router__router__init (Router__Router_Service *service,
                           Router__Router_ServiceDestroy destroy);
#define ROUTER__ROUTER__BASE_INIT \
    { &router__router__descriptor, protobuf_c_service_invoke_internal, NULL }
#define ROUTER__ROUTER__INIT(function_prefix__) \
    { ROUTER__ROUTER__BASE_INIT,\
      function_prefix__ ## gateway_status,\
      function_prefix__ ## uplink,\
      function_prefix__ ## subscribe,\
      function_prefix__ ## activate  }
void router__router__gateway_status(ProtobufCService *service,
                                    const Gateway__Status *input,
                                    Google__Protobuf__Empty_Closure closure,
                                    void *closure_data);
void router__router__uplink(ProtobufCService *service,
                            const Router__UplinkMessage *input,
                            Google__Protobuf__Empty_Closure closure,
                            void *closure_data);
void router__router__subscribe(ProtobufCService *service,
                               const Router__SubscribeRequest *input,
                               Router__DownlinkMessage_Closure closure,
                               void *closure_data);
void router__router__activate(ProtobufCService *service,
                              const Router__DeviceActivationRequest *input,
                              Router__DeviceActivationResponse_Closure closure,
                              void *closure_data);
typedef struct _Router__RouterManager_Service Router__RouterManager_Service;
struct _Router__RouterManager_Service
{
  ProtobufCService base;
  void (*gateway_status)(Router__RouterManager_Service *service,
                         const Router__GatewayStatusRequest *input,
                         Router__GatewayStatusResponse_Closure closure,
                         void *closure_data);
  void (*get_status)(Router__RouterManager_Service *service,
                     const Router__StatusRequest *input,
                     Router__Status_Closure closure,
                     void *closure_data);
};
typedef void (*Router__RouterManager_ServiceDestroy)(Router__RouterManager_Service *);
void router__router_manager__init (Router__RouterManager_Service *service,
                                   Router__RouterManager_ServiceDestroy destroy);
#define ROUTER__ROUTER_MANAGER__BASE_INIT \
    { &router__router_manager__descriptor, protobuf_c_service_invoke_internal, NULL }
#define ROUTER__ROUTER_MANAGER__INIT(function_prefix__) \
    { ROUTER__ROUTER_MANAGER__BASE_INIT,\
      function_prefix__ ## gateway_status,\
      function_prefix__ ## get_status  }
void router__router_manager__gateway_status(ProtobufCService *service,
                                            const Router__GatewayStatusRequest *input,
                                            Router__GatewayStatusResponse_Closure closure,
                                            void *closure_data);
void router__router_manager__get_status(ProtobufCService *service,
                                        const Router__StatusRequest *input,
                                        Router__Status_Closure closure,
                                        void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor router__subscribe_request__descriptor;
extern const ProtobufCMessageDescriptor router__uplink_message__descriptor;
extern const ProtobufCMessageDescriptor router__downlink_message__descriptor;
extern const ProtobufCMessageDescriptor router__device_activation_request__descriptor;
extern const ProtobufCMessageDescriptor router__device_activation_response__descriptor;
extern const ProtobufCMessageDescriptor router__gateway_status_request__descriptor;
extern const ProtobufCMessageDescriptor router__gateway_status_response__descriptor;
extern const ProtobufCMessageDescriptor router__status_request__descriptor;
extern const ProtobufCMessageDescriptor router__status__descriptor;
extern const ProtobufCServiceDescriptor router__router__descriptor;
extern const ProtobufCServiceDescriptor router__router_manager__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2frouter_2frouter_2eproto__INCLUDED */
